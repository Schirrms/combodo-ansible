# delete.yml task in itop_core role
# Based onCombodo's itop.core.write.yml, this tasks delete (or simulate a delete)
# a iTop CI
# Schirrms 2024-08-28
#
# Choices :
# 1. move the 'vars' section in the playbook into 'defaults', hence allowing to override
#    them if needed
# 2. all vars used in this role are now prefixed by 'itop_core_'
# 3. all vars in this task are now prefixed by 'itop_core_delete_'
#
# @copyright   Copyright (C) 2023 Combodo SARL
# @license     http://opensource.org/licenses/AGPL-3.0
#
# This playbook check if a iTop CI is unique (based on the itop_key reconciliation values)
# and if this is true, try to delete it
#
# Input parameters:
#  Those parameters are common for all tasks in the role
#  - itop_core_root          = Root URL of the iTop application
#  - itop_core_ws_version    = Web Service version
#  - itop_core_ws_auth_user  = User login
#  - itop_core_ws_auth_pwd   = User password

#  Other parameters dedicated to iTop's REST/JSON API need to be given to that task:
#  - itop_core_delete_obj_class  = Class of CI to be written
#  - itop_core_delete_key        = Set of attributes to be used for the reconciliation
#  - itop_core_delete_simulate   =  "true" or "false" with the quotes! (a string, not a boolean)
#                                   "true" : no deletion (default value)
#                                   "false": DELETION!

# Please, refer to iTop's wiki about REST/JSON services for more details on these parameters.
#
# Output parameters:
#  - itop_core_delete_code     = Error code sent by iTop's API
#  - itop_core_delete_message  = Error message sent by iTop's API
#  - itop_core_delete_obj_key  = Key of the deleted CI
#
---

### Stil relevant?
# If you prefer to encrypt the login account and password in an Ansible vault:
#  - Uncomment the following 2 lines
#  - Store the parameter in a local itopvault.yml file
#  vars_files:
#    itopvault.yml

### Are those tests still needed with the argument_specs in place ?
- name: Check key variables are defined and not empty
  ansible.builtin.fail:
    msg: "One variable is empty"
  when:
    - not __itop_core_delete_check
    - __itop_core_delete_check is none
  loop:
    - "{{ itop_core_delete_obj_class }}"
    - "{{ itop_core_delete_key }}"
  loop_control:
    loop_var: __itop_core_delete_check

- name: Build control list
  ansible.builtin.set_fact:
    itop_core_delete_fields_list: "{{ itop_core_delete_key.keys() | join(', ') }}"

- name: Check the uniqueness of the CI to remove
  ansible.builtin.include_tasks:
    file: ispresent.yml
  vars:
    itop_core_ispresent_key: "{{ itop_core_delete_key }}"
    itop_core_ispresent_obj_class: "{{ itop_core_delete_obj_class }}"

- name: Abort if uniqueness is not OK
  ansible.builtin.fail:
    msg: "Unable to start CI deletion, uniqueness result is {{ itop_core_ispresent_found_items }}, should be 0 or 1"
  when: ( itop_core_ispresent_found_items | int ) > 1

- name: Delete the CI
  when: ( itop_core_ispresent_found_items | int ) == 1
  block:
    - name: Call iTop API for actual deletion
      ansible.builtin.uri:
        url: "{{ __itop_core_api_url }}"
        method: POST
        force_basic_auth: true
        url_username: "{{ itop_core_ws_auth_user }}"
        url_password: "{{ itop_core_ws_auth_pwd }}"
        body: json_data= {
          "operation":"core/delete",
          "comment":"{{ __itop_core_delete_comment_for_delete }}",
          "class":"{{ itop_core_delete_obj_class }}",
          "key":{{ itop_core_delete_key | to_json }},
          "simulate":{{ itop_core_delete_simulate }}
          }
        return_content: true
      register: __itop_core_delete_response

    - name: Save the Json data
      ansible.builtin.set_fact:
        __itop_core_delete_jsondata: "{{ __itop_core_delete_response.content | from_json }}"

    - name: Get error code and message
      ansible.builtin.set_fact:
        itop_core_delete_code: "{{ __itop_core_delete_jsondata | json_query('code') }}"
        itop_core_delete_message: "{{ __itop_core_delete_jsondata | json_query('message') }}"
        __itop_core_delete_change: "{{ __itop_core_delete_jsondata | json_query('message') | regex_search('^Deleted:\\s*(\\d+)', '\\1') | first }}"
      changed_when: __itop_core_delete_change | int > 0

    - name: Display error, if any
      ansible.builtin.fail:
        msg: "{{ itop_core_delete_message }}"
      when: itop_core_delete_code != "0"
