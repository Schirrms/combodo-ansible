#
# Based onCombodo's itop.core.write.yml, this role count the number of items
# in the iTop CMDB for a specific reconciliation keyset
# Schirrms 2024-02-12
#
# Choices :
# 1. move the 'vars' section in the playbook into 'defaults', hence allowing to override
#    them if needed
# 2. many ' # noqa: jinja[invalid]' to please my somewhat outdated ansible-linter
# 3. all vars used in this role are now prefixed by 'itop_'
#
# @copyright   Copyright (C) 2023 Combodo SARL
# @license     http://opensource.org/licenses/AGPL-3.0
#
# This playbook check if a iTop CII is unique (based on the itop_key reconciliation values)
# and if this is true, try to delete it
#
# Input parameters:
#  Some are, by default, defined in the ./host_vars/localhost.yml file.
#  - itop_root = Root URL of the iTop application
#  - itop_ws_version = Web Service version
#  - itop_ws_auth_user = User login
#  - itop_ws_auth_pwd = User password
#  - itop_ws_ansible_uuid = Ansible Instance in iTop
#  Other parameters dedicated to iTop's REST/JSON API need to be given to that playbook:
#  - itop_obj_class = Class of CI to be written
#  - itop_key = Set of attributes to be used for the reconciliation
# Please, refer to iTop's wiki about REST/JSON services for more details on these parameters.
#
# Output parameters:
#  - itop_code = Error code sent by iTop's API
#  - itop_message = Error message sent by iTop's API
#  - itop_obj_key = Key of the deleted CI
#
---

# If you prefer to encrypt the login account and password in an Ansible vault:
#  - Uncomment the following 2 lines
#  - Store the parameter in a local itopvault.yml file
#  vars_files:
#    itopvault.yml

- name: Check key variables are defined and not empty
  ansible.builtin.fail:
    msg: "One variable is empty"
  with_items:
    - "{{ itop_obj_class }}"
    - "{{ itop_key }}"
  when:
    - not item
    - item is none

- name: Build control list
  ansible.builtin.set_fact:
    itop_fields_list: "{{ itop_key.keys() | join(', ') }}"

- name: Check the uniqueness of the CI to remove
  ansible.builtin.import_role:
    name: schirrms.combodo_ansible.itop_core_ispresent

- name: Abort if uniqueness is not OK
  ansible.builtin.fail:
    msg: "Unable to start CI deletion, uniqueness result is {{ itop_found_items }}, should be 1"
  when: ( itop_found_items | int ) != 1

# deletion using the key
- name: Building the deletion key record
  ansible.builtin.set_fact:
    __itop_int_key:
      "id": "{{ itop_obj_key }}"

- name: Delete the CI
  ansible.builtin.uri:
    url: "{{ __itop_api_url }}"
    method: POST
    force_basic_auth: true
    url_username: "{{ itop_ws_auth_user }}"
    url_password: "{{ itop_ws_auth_pwd }}"
    body: json_data= {
      "operation":"core/delete",
      "comment":"{{ __comment_for_delete }}",
      "class":"{{ itop_obj_class }}",
      "key":{{ __itop_int_key | to_json }},
      "simulate":{{ itop_core_delete_simulate }}
      }
    return_content: true
  register: response

- name: Save the Json data
  ansible.builtin.set_fact:
    __itop_jsondata: "{{ response.content | from_json }}"

- name: Get error code and message # noqa: jinja[invalid]
  ansible.builtin.set_fact:
    itop_code: "{{ __itop_jsondata | json_query('code') }}"
    itop_message: "{{ __itop_jsondata | json_query('message') }}"

- name: Display error, if any
  ansible.builtin.fail:
    msg: "{{ itop_message }}"
  when: itop_code != "0"
